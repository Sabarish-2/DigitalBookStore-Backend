#spring:
#  application:
#    name: user-service
#  jpa:
#    hibernate:
#      ddl-auto: update
#    database-platform: org.hibernate.dialect.MySQL8Dialect
#    show-sql: true
#  datasource:
#    driver: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/test?createDatabaseIfNotExist=true
#    username: root
#    password: Root
#	boot:
#		admin:
#			client:
#				url:http://localhost:8761/admin
#				enabled:true
#				instance:
#					service-url:http://localhost:8099
#
#server:
#  port: 8099
#
#eureka:
#  instance:
#    hostname: ${vcap.application.uris[0]:localhost}
#    metadataMap:
#      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
#    leaseRenewalIntervalInSeconds: 5
#
#  client:
#    region: default
#    registryFetchIntervalSeconds: 5
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/
#    register-with-eureka: true
#    fetch-registry: true
#
#springdoc:
#  api-docs:
#    enabled: true
#  swagger-ui:
#    enabled: true
#
##logging:
##  level:
##    org:
##      springframework: DEBUG
spring:
  application:
    name: user-service  
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/user_db?createDatabaseIfNotExist=true
    username: root
    password: Root
  boot:
    admin:
      client:
        url: http://localhost:8761/admin
        enabled: true
        instance:
          service-url: http://localhost:8086

server:
  port: 8086

eureka:
  instance:
    hostname: ${vcap.application.uris[0]:localhost}
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
    leaseRenewalIntervalInSeconds: 5
  client:
    region: default
    registryFetchIntervalSeconds: 5
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/
#    register-with-eureka: true
#    fetch-registry: true

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

logging:
  level:
    org:
      springframework: DEBUG

management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

info:
  app:
    name: User Rest API
    version: 1.0.0
    description: User Rest API